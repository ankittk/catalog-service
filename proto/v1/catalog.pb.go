// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/catalog.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a service in the organization catalog
type Service struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	OrganizationId string                 `protobuf:"bytes,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Versions       []*ServiceVersion      `protobuf:"bytes,5,rep,name=versions,proto3" json:"versions,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Url            string                 `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"` // Optional: frontend uses this to navigate to service details
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Service) Reset() {
	*x = Service{}
	mi := &file_v1_catalog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_v1_catalog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_v1_catalog_proto_rawDescGZIP(), []int{0}
}

func (x *Service) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Service) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *Service) GetVersions() []*ServiceVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *Service) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Service) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Service) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// Represents a version of a service
type ServiceVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ServiceId     string                 `protobuf:"bytes,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	IsActive      bool                   `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceVersion) Reset() {
	*x = ServiceVersion{}
	mi := &file_v1_catalog_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceVersion) ProtoMessage() {}

func (x *ServiceVersion) ProtoReflect() protoreflect.Message {
	mi := &file_v1_catalog_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceVersion.ProtoReflect.Descriptor instead.
func (*ServiceVersion) Descriptor() ([]byte, []int) {
	return file_v1_catalog_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServiceVersion) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceVersion) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceVersion) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ServiceVersion) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ServiceVersion) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Request to list services
type ListServicesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pagination
	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filtering
	OrganizationId string `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	SearchQuery    string `protobuf:"bytes,4,opt,name=search_query,json=searchQuery,proto3" json:"search_query,omitempty"`
	// Sorting
	SortBy        string `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`          // Allowed: "name", "created_at", "updated_at"
	SortOrder     string `protobuf:"bytes,6,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"` // "asc" or "desc"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServicesRequest) Reset() {
	*x = ListServicesRequest{}
	mi := &file_v1_catalog_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesRequest) ProtoMessage() {}

func (x *ListServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_catalog_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesRequest.ProtoReflect.Descriptor instead.
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return file_v1_catalog_proto_rawDescGZIP(), []int{2}
}

func (x *ListServicesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListServicesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListServicesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListServicesRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *ListServicesRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListServicesRequest) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

// Response with paginated list of services
type ListServicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      []*Service             `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServicesResponse) Reset() {
	*x = ListServicesResponse{}
	mi := &file_v1_catalog_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesResponse) ProtoMessage() {}

func (x *ListServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_catalog_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesResponse.ProtoReflect.Descriptor instead.
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return file_v1_catalog_proto_rawDescGZIP(), []int{3}
}

func (x *ListServicesResponse) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *ListServicesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListServicesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Request to get a single service
type GetServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceRequest) Reset() {
	*x = GetServiceRequest{}
	mi := &file_v1_catalog_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceRequest) ProtoMessage() {}

func (x *GetServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_catalog_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceRequest.ProtoReflect.Descriptor instead.
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return file_v1_catalog_proto_rawDescGZIP(), []int{4}
}

func (x *GetServiceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response containing a single service
type GetServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       *Service               `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceResponse) Reset() {
	*x = GetServiceResponse{}
	mi := &file_v1_catalog_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceResponse) ProtoMessage() {}

func (x *GetServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_catalog_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceResponse.ProtoReflect.Descriptor instead.
func (*GetServiceResponse) Descriptor() ([]byte, []int) {
	return file_v1_catalog_proto_rawDescGZIP(), []int{5}
}

func (x *GetServiceResponse) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

// Request to get versions of a service
type GetServiceVersionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceVersionsRequest) Reset() {
	*x = GetServiceVersionsRequest{}
	mi := &file_v1_catalog_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceVersionsRequest) ProtoMessage() {}

func (x *GetServiceVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_catalog_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceVersionsRequest.ProtoReflect.Descriptor instead.
func (*GetServiceVersionsRequest) Descriptor() ([]byte, []int) {
	return file_v1_catalog_proto_rawDescGZIP(), []int{6}
}

func (x *GetServiceVersionsRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

// Response with all versions of a service
type GetServiceVersionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Versions      []*ServiceVersion      `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceVersionsResponse) Reset() {
	*x = GetServiceVersionsResponse{}
	mi := &file_v1_catalog_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceVersionsResponse) ProtoMessage() {}

func (x *GetServiceVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_catalog_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceVersionsResponse.ProtoReflect.Descriptor instead.
func (*GetServiceVersionsResponse) Descriptor() ([]byte, []int) {
	return file_v1_catalog_proto_rawDescGZIP(), []int{7}
}

func (x *GetServiceVersionsResponse) GetVersions() []*ServiceVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

var File_v1_catalog_proto protoreflect.FileDescriptor

const file_v1_catalog_proto_rawDesc = "" +
	"\n" +
	"\x10v1/catalog.proto\x12\x02v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17validate/validate.proto\"\xc2\x02\n" +
	"\aService\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\x04name\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x120\n" +
	"\x0forganization_id\x18\x04 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x0eorganizationId\x12.\n" +
	"\bversions\x18\x05 \x03(\v2\x12.v1.ServiceVersionR\bversions\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x10\n" +
	"\x03url\x18\b \x01(\tR\x03url\"\xa0\x02\n" +
	"\x0eServiceVersion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\aversion\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\aversion\x12&\n" +
	"\n" +
	"service_id\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1b\n" +
	"\tis_active\x18\x05 \x01(\bR\bisActive\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xe0\x01\n" +
	"\x13ListServicesRequest\x12&\n" +
	"\tpage_size\x18\x01 \x01(\x05B\t\xfaB\x06\x1a\x04\x18d(\x01R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12'\n" +
	"\x0forganization_id\x18\x03 \x01(\tR\x0eorganizationId\x12!\n" +
	"\fsearch_query\x18\x04 \x01(\tR\vsearchQuery\x12\x17\n" +
	"\asort_by\x18\x05 \x01(\tR\x06sortBy\x12\x1d\n" +
	"\n" +
	"sort_order\x18\x06 \x01(\tR\tsortOrder\"\x88\x01\n" +
	"\x14ListServicesResponse\x12'\n" +
	"\bservices\x18\x01 \x03(\v2\v.v1.ServiceR\bservices\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\",\n" +
	"\x11GetServiceRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x02id\";\n" +
	"\x12GetServiceResponse\x12%\n" +
	"\aservice\x18\x01 \x01(\v2\v.v1.ServiceR\aservice\"C\n" +
	"\x19GetServiceVersionsRequest\x12&\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\"L\n" +
	"\x1aGetServiceVersionsResponse\x12.\n" +
	"\bversions\x18\x01 \x03(\v2\x12.v1.ServiceVersionR\bversions2\xc2\x02\n" +
	"\x0eCatalogService\x12W\n" +
	"\fListServices\x12\x17.v1.ListServicesRequest\x1a\x18.v1.ListServicesResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/v1/services\x12V\n" +
	"\n" +
	"GetService\x12\x15.v1.GetServiceRequest\x1a\x16.v1.GetServiceResponse\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/services/{id}\x12\x7f\n" +
	"\x12GetServiceVersions\x12\x1d.v1.GetServiceVersionsRequest\x1a\x1e.v1.GetServiceVersionsResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v1/services/{service_id}/versionsBk\n" +
	"\x06com.v1B\fCatalogProtoP\x01Z+github.com/ankittk/catalog-service/proto/v1\xa2\x02\x03VXX\xaa\x02\x02V1\xca\x02\x02V1\xe2\x02\x0eV1\\GPBMetadata\xea\x02\x02V1b\x06proto3"

var (
	file_v1_catalog_proto_rawDescOnce sync.Once
	file_v1_catalog_proto_rawDescData []byte
)

func file_v1_catalog_proto_rawDescGZIP() []byte {
	file_v1_catalog_proto_rawDescOnce.Do(func() {
		file_v1_catalog_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_catalog_proto_rawDesc), len(file_v1_catalog_proto_rawDesc)))
	})
	return file_v1_catalog_proto_rawDescData
}

var file_v1_catalog_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_v1_catalog_proto_goTypes = []any{
	(*Service)(nil),                    // 0: v1.Service
	(*ServiceVersion)(nil),             // 1: v1.ServiceVersion
	(*ListServicesRequest)(nil),        // 2: v1.ListServicesRequest
	(*ListServicesResponse)(nil),       // 3: v1.ListServicesResponse
	(*GetServiceRequest)(nil),          // 4: v1.GetServiceRequest
	(*GetServiceResponse)(nil),         // 5: v1.GetServiceResponse
	(*GetServiceVersionsRequest)(nil),  // 6: v1.GetServiceVersionsRequest
	(*GetServiceVersionsResponse)(nil), // 7: v1.GetServiceVersionsResponse
	(*timestamppb.Timestamp)(nil),      // 8: google.protobuf.Timestamp
}
var file_v1_catalog_proto_depIdxs = []int32{
	1,  // 0: v1.Service.versions:type_name -> v1.ServiceVersion
	8,  // 1: v1.Service.created_at:type_name -> google.protobuf.Timestamp
	8,  // 2: v1.Service.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 3: v1.ServiceVersion.created_at:type_name -> google.protobuf.Timestamp
	8,  // 4: v1.ServiceVersion.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 5: v1.ListServicesResponse.services:type_name -> v1.Service
	0,  // 6: v1.GetServiceResponse.service:type_name -> v1.Service
	1,  // 7: v1.GetServiceVersionsResponse.versions:type_name -> v1.ServiceVersion
	2,  // 8: v1.CatalogService.ListServices:input_type -> v1.ListServicesRequest
	4,  // 9: v1.CatalogService.GetService:input_type -> v1.GetServiceRequest
	6,  // 10: v1.CatalogService.GetServiceVersions:input_type -> v1.GetServiceVersionsRequest
	3,  // 11: v1.CatalogService.ListServices:output_type -> v1.ListServicesResponse
	5,  // 12: v1.CatalogService.GetService:output_type -> v1.GetServiceResponse
	7,  // 13: v1.CatalogService.GetServiceVersions:output_type -> v1.GetServiceVersionsResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_v1_catalog_proto_init() }
func file_v1_catalog_proto_init() {
	if File_v1_catalog_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_catalog_proto_rawDesc), len(file_v1_catalog_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_catalog_proto_goTypes,
		DependencyIndexes: file_v1_catalog_proto_depIdxs,
		MessageInfos:      file_v1_catalog_proto_msgTypes,
	}.Build()
	File_v1_catalog_proto = out.File
	file_v1_catalog_proto_goTypes = nil
	file_v1_catalog_proto_depIdxs = nil
}
